daemon on;
error_log logs/error.log error;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application stream {
            live on;
	    # can only read rtmp ONCE per endpoint, so just string ffmpeg together
            exec ffmpeg -hide_banner -re -f flv -i rtmp://localhost:1935/stream/$name -pix_fmt yuv420p 
	    -map 0:0 -c:a aac -b:a 128k -map 0:1 -c:v libx264 -b:v 2500k -tune zerolatency -profile:v high -preset veryfast -bf 0 -refs 3 -sc_threshold 0 -g 150 -keyint_min 150 -vf "fps=30,drawtext=fontfile=/opt/dash/utils/OpenSans-Bold.ttf:box=1:fontcolor=black:boxcolor=white:fontsize=100:x=40:y=400:textfile=/opt/dash/utils/text.txt" -vsync passthrough -method PUT -streaming 1 -http_persistent 1 -utc_timing_url "https://time-synth.global.ssl.fastly.net/?iso" -index_correction 1 -use_timeline 0 -media_seg_name 'chunk-stream-\$RepresentationID\$-\$Number%05d\$.m4s' -init_seg_name 'init-stream1-\$RepresentationID\$.m4s' -window_size 5 -extra_window_size 10 -remove_at_exit 1 -f dash -adaptation_sets "id=1,streams=v id=0,streams=a" http://localhost:8080/ldash/$name/manifest.mpd
	    -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p2500kbps
	    -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 1500k -f flv -g 30 -r 30 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p1500kbps;

        }

        application hls {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 10;
            hls_path /opt/hls;
            hls_nested on;
            hls_variant _720p2500kbps BANDWIDTH=2500000,RESOLUTION=1280x720;
            hls_variant _480p1500kbps BANDWIDTH=1500000,RESOLUTION=854x480;
        }


        #application relay {
        #  live on;
	#  record off;
	#  meta copy;
	#  push rtmp://video-relay.zj.is:1935/stream/ live=1;
	#  #push rtmp://video-relay.zj.is:1935/hls/ live=1;
	#  push_reconnect 1s;
        #}
    }
}

http {
    server {
        listen 8888;

        # still need to support HLS for iOS fallback
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /opt/hls;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /live {
          alias /opt/hls;
          types {
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
          }
          add_header 'Cache-Control' 'no-cache';
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length';
          if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
          }
        }
        
        # -- streamline stuff
	# nginx supports chunked-transfer natively, so nothing else to do here

        # debug player
        location /ldashplay/ {
	  proxy_pass http://127.0.0.1:8080/ldashplay/;
	}

        # mpeg-dash
	location /ldash/ {
	  proxy_pass http://127.0.0.1:8080/ldash/;
          # just in case, completely turn off buffering
	  client_max_body_size 0;
	  proxy_request_buffering off;
	  proxy_http_version 1.1;
          # CORS
          proxy_set_header 'Cache-Control' 'no-cache';
          proxy_set_header 'Access-Control-Allow-Origin' '*' always;
	}

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet static/stat.xsl;
        }

        location /static {
            alias /www/static;
        }

        location = /crossdomain.xml {
            root /www/static;
            default_type text/xml;
            expires 24h;
        }

        location = / {
            rewrite ^/$ https://live.zj.is redirect;
        }

    }
}
